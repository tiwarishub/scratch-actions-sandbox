name: 'dhis2: verify (app)'

on: push

env:
    GIT_AUTHOR_NAME: '@dhis2-bot'
    GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
    GIT_COMMITTER_NAME: '@dhis2-bot'
    GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
    GH_TOKEN: ${{secrets.DHIS2_BOT_GITHUB_TOKEN}}
    CI: true

jobs:
    install:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.x

            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

            - name: Install
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

#     build:
#         runs-on: ubuntu-latest
#         needs: install
#         if: "!contains(github.event.head_commit.message, '[skip ci]')"
#         steps:
#             - uses: actions/checkout@v2
#             - uses: actions/setup-node@v1
#               with:
#                   node-version: 12.x

#             - uses: actions/cache@v2
#               id: yarn-cache
#               with:
#                   path: '**/node_modules'
#                   key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

#             - name: Build
#               run: yarn build

#             - uses: actions/upload-artifact@v2
#               with:
#                   name: app-build
#                   path: |
#                       **/build
#                       !**/node_modules
#                   retention-days: 1

#     lint:
#         runs-on: ubuntu-latest
#         needs: install
#         if: "!contains(github.event.head_commit.message, '[skip ci]')"
#         steps:
#             - uses: actions/checkout@v2
#             - uses: actions/setup-node@v1
#               with:
#                   node-version: 12.x

#             - uses: actions/cache@v2
#               id: yarn-cache
#               with:
#                   path: '**/node_modules'
#                   key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

#             - name: Lint
#               run: yarn lint

#     test:
#         runs-on: ubuntu-latest
#         needs: [install]
#         if: "!contains(github.event.head_commit.message, '[skip ci]')"
#         steps:
#             - uses: actions/checkout@v2
#             - uses: actions/setup-node@v1
#               with:
#                   node-version: 12.x

#             - uses: actions/cache@v2
#               id: yarn-cache
#               with:
#                   path: '**/node_modules'
#                   key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

#             - name: Generate translations
#               run: yarn d2-app-scripts i18n generate

#             - name: Test
#               run: yarn test

    e2e:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        needs: install

        strategy:
            matrix:
                containers: [1, 2, 3]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - uses: actions/setup-node@v1
              with:
                  node-version: 12.x

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

            - name: Install Cypress binary
              run: yarn cypress install

            # TODO: Set up DHIS2 instance using Docker and D2 CLI (https://cli.dhis2.nu)
            # trying	
            - name: install yarn	
              run: brew install yarn	
     	
            - name: install dhis cli	
              run: yarn global add @dhis2/cli	
      	
            - name: seed db	
              run: d2 cluster up 2.35.0 --db-version 2.35 --seed	
          	
            #try end
            - name: End-to-End tests
              uses: cypress-io/github-action@v2
              with:
                  install: false
                  record: true
                  parallel: true
                  start: ${{ env.SERVER_START_CMD }}
                  wait-on: ${{ env.SERVER_URL }}
                  wait-on-timeout: 300
                  cache-key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  group: 'e2e'
                  tag: ${{ github.event_name }}
              env:
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
                  SERVER_START_CMD: 'yarn cy:start'
                  SERVER_URL: 'http://localhost:3000'
                  CYPRESS_dhis2_base_url: 'http://localhost:8080'
                  CYPRESS_dhis2_username: 'admin'
                  CYPRESS_dhis2_passord: 'district'
  
    # release:
    #     runs-on: ubuntu-latest
    #     needs: [publish]
    #     if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')"
    #     steps:
    #         - uses: actions/checkout@v2
    #           with:
    #               token: ${{env.GH_TOKEN}}
    #         - uses: actions/setup-node@v1
    #           with:
    #               node-version: 12.x
    #         - name: Publish release to GitHub
    #           run: npx @dhis2/cli-utils release
